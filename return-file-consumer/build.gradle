plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

group 'VMSFileProcess'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.7.0'

    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'redis.clients:jedis'
    implementation  'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.7"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.hazelcast:hazelcast-spring'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    testImplementation 'org.springframework.kafka:spring-kafka-test'

    compile 'com.oracle:ojdbc6:11.2.0'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: '2.2.0.RELEASE'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
